<!doctype html>  
<html lang="en">
	
<head>
<meta charset="utf-8">

<title>LiquidHaskell FLOPS 2014</title>

<meta name="description" content="LiquidHaskell FLOPS 2014">
<meta name="author" content="Ranjit Jhala">

<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

<link href='http://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic' rel='stylesheet' type='text/css'>

<link rel="stylesheet" href="$reveal$/css/main.css">
<link rel="stylesheet" href="$reveal$/css/theme/seminar.css" id="theme">
<link rel="stylesheet" href="$reveal$/css/liquidhaskell.css">

<!-- For syntax highlighting -->
<link rel="stylesheet" href="$reveal$/lib/css/zenburn.css">

<script>
	// If the query includes 'print-pdf' we'll use the PDF print sheet
	document.write( '<link rel="stylesheet" href="../_support/reveal_01/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
</script>

<!--[if lt IE 9]>
<script src="lib/js/html5shiv.js"></script>
<![endif]-->
</head>
<body>

$$
\newcommand{\defeq}{\ \doteq\ }
\newcommand{\subty}{\preceq}
\newcommand{\foo}[4]{{#1}^{#4} + {#2}^{#4} = {#3}^{#4}}
\newcommand{\reft}[3]{\{{#1}:{#2} \mid {#3}\}}
\newcommand{\bindx}[2]{{#1}\:\{#2}}
\newcommand{\reftx}[2]{\{\bindx{#1}{#2}\}}
\newcommand{\Int}{\mathtt{Int}}
\newcommand{\inferrule}[3][]{\frac{#2}{#3}\;{#1}}
$$


<div class="reveal">
<!-- 
Used to fade in a background when a specific slide state is reached
-->
<div class="state-background"></div>

<!-- Slides
Any section element inside of this "slides" container is displayed as a slide
-->
<div class="slides">
<!-- Pandoc -->
$if(title)$
<section class="titlepage">
<h1 class="title">$title$</h1>
$for(author)$
<h2 class="author">$author$</h2>
$endfor$
<h3 class="date">$date$</h3>
</section>
$endif$
$body$
<!-- End Pandoc -->

</div>
<!-- End Slides -->

<!-- The navigational controls UI -->
<aside class="controls">
<a class="left" href="#">&#x25C4;</a>
<a class="right" href="#">&#x25BA;</a>
<a class="up" href="#">&#x25B2;</a>
<a class="down" href="#">&#x25BC;</a>
</aside>

<!-- Presentation progress bar -->
<div class="progress"><span></span></div>
</div>

<!-- Initialize reveal.js :: make settings changes here -->
<script src="$reveal$/lib/js/head.min.js"></script>
<script src="$reveal$/js/reveal.js"></script>
<script type="text/javascript" src="https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<script type='text/x-mathjax-config'> 
  //
  //  This script call initializes MathJax
  //
  MathJax.Hub.Config({
    jax: ["input/TeX","output/HTML-CSS"],    // input is TeX and output is HTML-CSS format
    extensions: ["tex2jax.js", "TeX/newcommand.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],              // use the tex2jax preprocessor
    tex2jax: {
      inlineMath: [['$', '$'], ['\\(', '\\)']], // uncomment to use $...$ for inline math
      processEscapes: 1                      // set to 1 to allow \$ to produce a dollar sign
    }
  });

// Add some default macros for proof rules
MathJax.Hub.Register.StartupHook("TeX Jax Ready",function () {
  var TEX = MathJax.InputJax.TeX;
  TEX.Macro("bnfalt","{\\;\\;|\\;\\;}");
  TEX.Macro("fst","{\\pi_1\\;{#1}}", 1);
  TEX.Macro("snd","{\\pi_2\\;{#1}}", 1);
  TEX.Macro("inl", "{\\mathsf{inl}}", 0);
  TEX.Macro("inr", "{\\mathsf{inr}}", 0);
  TEX.Macro("abort", "{\\mathsf{abort}}", 0); 
  TEX.Macro("case", "{\\mathsf{case}({#1}, {#2}.\\;{#3}, {#4}.\\;{#5})}", 5);
  TEX.Macro("fun","{\\lambda {#1}.\\;{#2}}", 2);
  TEX.Macro("Fun","{\\Lambda {#1}.\\;{#2}}", 2);
  TEX.Macro("rule","{\\frac{\\array{#1}}{#2}}",2);
  TEX.Macro("judge","{{#1} \\vdash {#2} : {#3}}",3);
  TEX.Macro("interp","[\\![{#1}]\\!]",1);
  TEX.Macro("setof", "\\left\\{{#1}\\right\\}", 1);
  TEX.Macro("monad", "\\bigcirc\\;{#1}",1);
  TEX.Macro("setof", "\\{ {#1} \\}", 1);
  TEX.Macro("letv", "\\mathsf{let}\\;{#1} = {#2}\\;\\mathsf{in}\\;{#3}", 3);
  TEX.Macro("comprehend", "\\setof{{#1}\\bnfalt{#2}}", 2);
  TEX.Macro("N", "\\mathbb{N}");
});
</script>



<script>		
	// Full list of configuration options available here:
	// https://github.com/hakimel/reveal.js#configuration
	Reveal.initialize({
		controls: true,
		progress: true,
		history: true,
		center: false,
        rollingLinks: false,
        theme: Reveal.getQueryHash().theme || 'seminar', // available themes are in /css/theme
		transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/linear(2d)

		// Optional libraries used to extend on reveal.js
		dependencies: [
			{ src: '$reveal$/lib/js/highlight.js', async: true, callback: function() { window.hljs.initHighlightingOnLoad(); } },
			{ src: '$reveal$/lib/js/classList.js', condition: function() { return !document.body.classList; } },
			{ src: '$reveal$/lib/js/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
			{ src: '$reveal$/lib/js/data-markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
			{ src: '$reveal$/socket.io/socket.io.js', async: true, condition: function() { return window.location.host === 'localhost:1947'; } },
			{ src: '$reveal$/plugin/speakernotes/client.js', async: true, condition: function() { return window.location.host === 'localhost:1947'; } },
		]
	});
</script>
<!-- Script for LiveReload -->
<script>document.write('<script src="http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1"></' + 'script>')
</script>
</body>
</html>
