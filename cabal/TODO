TODO
----

GHC.List.lhs

FEATURES 
--------

- Why no error-location on tests/neg/test00.hs                          
- Nuke "forall" from specs. Tedious. Should auto-generalize... <------------------------- HEREHEREHEREHERE
- Qualifier Scraping

- pos/deptup.hs (type signature: for constructor wrapper)
- Add/Parse predicate signatures for lists and tuples: [{x: Int | x > 0}]


data [a]<p :: a -> a -> Bool> 
  = []
  | (:) (h :: a) (t :: [a<p h>]<p>)  

data (a1, a2) 
  < p1 :: a1 -> Bool
  , p2 :: a1 -> a2 -> Bool
  > 
  = (,) (x1 :: a1<p1>) (x2 :: a2<p2 x1>)

data (a1, a2, a3) 
  < p1 :: a1 -> Bool
  , p2 :: a1 -> a2 -> Bool
  , p3 :: a1 -> a2 -> a3 -> Bool
  > 
  = (,) (x1 :: a1<p1>) (x2 :: a2<p2 x1>) (x3 :: a3<p3 x1 x2>)

data (a1, a2, a3) 
  < p1 :: a1 -> Bool
  , p2 :: a1 -> a2 -> Bool
  , p3 :: a1 -> a2 -> a3 -> Bool
  , p4 :: a1 -> a2 -> a3 -> a4 -> Bool
  > 
  = (,) (x1 :: a1<p1>) (x2 :: a2<p2 x1>) (x3 :: a3<p3 x1 x2>) (x4 :: a4<p4 x1 x2 x3>)

Get ITE predicates to parse:
{-@ assert drop        :: forall a. n: Int -> xs:[a] -> {v:[a] | (len(xs) <  n) ? (len(v) = 0) : (len(v) = len(xs) - n) } @-}

KNOWN BUGS
----------

- tests/todo/fft.hs

- hmatrix
    > http://hackage.haskell.org/packages/archive/hmatrix/0.12.0.1/doc/html/src/Data-Packed-Internal-Matrix.html#Matrix
    > http://hackage.haskell.org/packages/archive/hmatrix/0.12.0.1/doc/html/src/Data-Packed-Internal-Vector.html#fromList
    
- xmonad properties

- NDM/catch benchmarks (with refinements)

- cabal integration
    > so you can build against liquid?
    > how does this affect ghc integration? (shouldn't matter, because you
    > can specify --with-ghc

- binsearch crashes because you have chains like:
        
        x1 = 2
        x2 = x1
        x3 = x2
        z  = x3 / 2

  so I guess you need some constprop inside the constraint simplification.

- tests/pos/data-mono0.hs
  partial pattern match desugars into exception syntax with unhandled
  casts. Throws an error in fixpoint. At least throw error in Constraint Gen?
          (\ _ ->
             (Control.Exception.Base.irrefutPatError
                @ () "pos/data-mono0.hs:8:9-23|(Test.Cons x _)")
             `cast` (UnsafeCo () GHC.Types.Int :: () ~ GHC.Types.Int))
            GHC.Prim.realWorld#;
