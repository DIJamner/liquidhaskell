//MOVE INTO AN OPTIONAL FILE (cf. liquidc spec)
//qualif NULLY0(v:ptr)       : nully([v]) = 0 
//qualif NULLY1(v:ptr)       : nully([v]) = 1 
//qualif NULLY2(v:int)       : v = nully([~A])


//MOVE INTO AN OPTIONAL FILE (cf. liquidc spec)
qualif NonNull(v: [a])        : (? (nonnull([v])))
qualif Null(v: [a])           : (~ (? (nonnull([v]))))
qualif EqNull(v:bool, ~A: [a]): ((? v) <=> (? (nonnull([~A]))))

//MOVE INTO AN OPTIONAL FILE (cf. liquidc spec)
qualif ListEmpty(v: [a])      : len([v]) = 0 
qualif ListLen(v: [a])        : len([v]) >= 0 
qualif ListNotEmpty(v: [a])   : len([v]) > 0 
qualif SameLen(v:[a], ~A:[b]) : len([v]) = len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:ptr, ~A: int)  : ~A = len([v]) 
