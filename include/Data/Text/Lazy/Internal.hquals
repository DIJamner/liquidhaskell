qualif LTIsEmp(v:Bool, ~A: Data.Text.Lazy.Internal.Text) : (Prop(v) <=> ltlength([~A]) [ > ;  = ] 0)
qualif LTextZ(v: Data.Text.Lazy.Internal.Text)           : ltlength([v]) [ = ; >= ; > ] 0
qualif CmpLTLen(v:Data.Text.Lazy.Internal.Text, ~A:Data.Text.Lazy.Internal.Text) : (ltlength([v]) [ = ; >= ; > ; < ; <= ] ltlength([~A]))
qualif CmpLTLenInt(v:int, ~A: Data.Text.Lazy.Internal.Text)  : (v [ = ; >= ; > ; < ; <= ] ltlength([~A]))
qualif LTLenCmp(v:Data.Text.Lazy.Internal.Text, ~A: int)  : ~A [ = ; >= ; > ; < ; <= ] ltlength([v])
qualif LTLenAcc(v:int, ~A:Data.Text.Lazy.Internal.Text, ~B: int): v = ltlength([~A]) + ~B
qualif LTLenDiff(v:Data.Text.Lazy.Internal.Text, ~A:int): ltlength([v]) = (~A [ + ; - ] 1)
qualif LTLenComb(v:Data.Text.Lazy.Internal.Text, ~A:Data.Text.Lazy.Internal.Text, ~B:Data.Text.Lazy.Internal.Text): ltlength([v]) = (ltlength([~A]) [ + ; - ] ltlength([~B]))
